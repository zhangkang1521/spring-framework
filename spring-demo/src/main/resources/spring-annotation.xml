<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--
        1.扫描指定包下@Component注解的类，注册为BeanDefinition；
        2.注入5个注解处理器
     -->
    <!--<context:component-scan base-package="org.zk.service"/>-->

    <!-- 自动注入以下5个注解处理器 -->
    <!--<context:annotation-config/>-->

    <!-- @PostConstruct @PreDestroy @Resource 注解处理 postProcessPropertyValues -->
    <!--<bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor"/>-->

    <!-- @Autowired @Inject @Value 注解处理 postProcessPropertyValues -->
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

    <!-- @Required 注解处理 postProcessPropertyValues -->
    <!--<bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor"/>-->

    <!--
        @Configuration注解
        postProcessBeanDefinitionRegistry 容器注册后处理
        会自动注册一个org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareProcessor
    -->
    <bean class="org.springframework.context.annotation.ConfigurationClassPostProcessor"/>

    <bean class="org.zk.config.ApplicationConfig"></bean>



    <!-- 模拟dubbo @Reference -->
    <!--<bean class="org.zk.domain.ReferenceAnnotationBeanPostProcessor"></bean>-->


    <!-- 数据校验 -->
    <!--<bean class="org.springframework.validation.beanvalidation.BeanValidationPostProcessor"/>-->
    <!--<bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/>-->
    <!--<bean class="org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor"/>-->
    <!--<bean class="org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor"/>-->

</beans>



