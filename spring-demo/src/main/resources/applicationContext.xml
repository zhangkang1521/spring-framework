<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 单例bean,spring容器启动时即初始化 -->
    <bean id="user" class="org.zk.domain.User">
    </bean>

    <bean id="car" class="org.zk.domain.Car"></bean>

    <!-- bean前置处理，后置处理 -->
    <!--<bean class="org.zk.domain.MyBeanPostProcessor"/>-->

    <!-- 实例化处理 -->
    <!--<bean class="org.zk.domain.MyInstantiationAwareBeanPostProcessors"></bean>-->

    <!-- 模拟dubbo @Reference -->
    <!--<bean class="org.zk.domain.ReferenceAnnotationBeanPostProcessor"></bean>-->

    <!-- @Autowired @Value @Inject注解的字段或方法处理 -->
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

    <!--<bean id="myAspect" class="org.zk.aop.MyAspect"></bean>-->

    <!--<bean id="myTarget" class="org.zk.aop.MyTargetImpl"></bean>-->
    <!--<bean id="myAspect" class="org.zk.aop.MyAspect"></bean>-->
    <!--<bean id="myAspect2" class="org.zk.aop.MyAspect2"></bean>-->

    <!--<aop:aspectj-autoproxy/>-->




    <!-- beanId必须为conversionService -->
    <!--<bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="org.zk.convert.String2DateConverter"></bean>
            </set>
        </property>
    </bean>-->

<!--    <bean class="org.zk.event.UserService"></bean>
    <bean class="org.zk.event.ScoreService"></bean>
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
    </bean>
    <bean id="applicationEventMulticaster" class="org.springframework.context.event.SimpleApplicationEventMulticaster">
        <property name="taskExecutor" ref="taskExecutor"></property>
    </bean>-->


    <!--<bean class="org.zk.domain.MyBeanDefinitionRegistryPostProcessor"></bean>-->

   <!-- -->
    <!--<bean class="org.zk.domain.ObscenityRemovingBeanFactoryPostProcessor">-->
        <!--<property name="obscenties">-->
            <!--<set>-->
                <!--<value>fuck</value>-->
                <!--<value>shit</value>-->
            <!--</set>-->
        <!--</property>-->
    <!--</bean>-->
    <!--<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
        <!--<property name="locations">-->
            <!--<list>-->
                <!--<value>bean.properties</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->


   <!-- <bean id="car" class="org.zk.domain.Car" lazy-init="true">
        <property name="createTime" value="2018-08-05 20:48:00"/>
    </bean>-->


    <!--<bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        &lt;!&ndash;<property name="customEditors">
            <map>
                <entry key="java.util.Date">
                    <bean class="org.zk.domain.DatePropertyEditor"/>
                </entry>
            </map>
        </property>&ndash;&gt;
        <property name="propertyEditorRegistrars">
            <list>
                <bean class="org.zk.domain.DatePropertyEditorRegistrar"></bean>
            </list>
        </property>
    </bean>-->


    <!--<bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor"/>
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
    <bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor"/>-->

    <!--<bean class="org.springframework.validation.beanvalidation.BeanValidationPostProcessor"/>-->
    <!--<bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/>-->
    <!--<bean class="org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor"/>-->
    <!--<bean class="org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor"/>-->

    <!--<bean class="org.zk.domain.MyBeanPostProcessor"></bean>-->

     <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
         <property name="locations">
             <array>
                 <value>classpath:jdbc.properties</value>
             </array>
         </property>
     </bean>


    <!--<bean id="userService" class="org.zk.service.UserService" lazy-init="true">-->
    <!--<lookup-method bean="user" name="getNewUser"></lookup-method>-->
    <!--</bean>-->

    <!--<bean class="org.zk.domain.LifeCycle" scope="singleton" init-method="xmlInit" destroy-method="xmlDestroy"/>-->

    <!--<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>messages</value>
            </list>
        </property>
    </bean>-->
</beans>



