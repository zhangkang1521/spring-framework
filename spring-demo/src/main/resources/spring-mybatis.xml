<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"  init-method="init" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/zk"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
    </bean>

    <!-- FactoryBean接口获取sqlSessionFactory -->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--<property name="configLocation" value="classpath:mybatis.xml"/>-->
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:mappers/*.xml"></property>
        <property name="configuration">
            <bean class="org.apache.ibatis.session.Configuration">
                <property name="mapUnderscoreToCamelCase" value="true"/>
                <property name="localCacheScope" value="STATEMENT"/>
            </bean>
        </property>
    </bean>

    <!-- FactoryBean接口获取接口代理，isSingleton=true，保证应用中只有1个UserDao -->
    <bean id="userDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="org.zk.dao.UserDao"/>
        <property name="sqlSessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 自动注册指定包下Dao -->
   <!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="org.zk.dao" />
        <property name="sqlSessionFactoryBeanName" value="sessionFactory"></property>
    </bean>-->

    <!--<context:component-scan base-package="org.zk.service"/>-->
    <bean id="userService" class="org.zk.service.impl.UserServiceImpl">
        <property name="userDao" ref="userDao"></property>
    </bean>

    <!-- 事务管理类 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>




    <!--
        TxNamespaceHandler
         InfrastructureAdvisorAutoProxyCreator 创建代理，优先级低于AnnotationAwareAspectJAutoProxyCreator
         BeanFactoryTransactionAttributeSourceAdvisor 增强
         AnnotationTransactionAttributeSource 获取@Transactional注解属性，判断是否需要增强
         TransactionInterceptor 方法拦截器
      -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- 注册bean后置处理器：AnnotationAwareAspectJAutoProxyCreator -->
    <!--<aop:aspectj-autoproxy expose-proxy="true"/>-->

    <!--<bean id="myTarget" class="org.zk.aop.MyTargetImpl"></bean>-->

    <!--<bean id="myAspect" class="org.zk.aop.MyAspect"></bean>-->

</beans>



